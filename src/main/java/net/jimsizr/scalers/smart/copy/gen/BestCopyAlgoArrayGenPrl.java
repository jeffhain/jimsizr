/*
 * Copyright 2025 Jeff Hain
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package net.jimsizr.scalers.smart.copy.gen;

/**
 * Mostly generated by BestCopyAlgoTuningMain
 * (+ eventual modifs/cleanup).
 */
public class BestCopyAlgoArrayGenPrl {
    
    private static final byte AWT = 0;
    
    private static final byte CO_AWT = 2;
    
    private static final byte ACO_AWT = 12;
    private static final byte ACO_BW_ACO_AWT = 18;
    
    private static final byte BW_AWT = 32;
    private static final byte BW_ACO_AWT = 36;
    
    private static final byte JIS = 1;
    
    private static final byte CO_JIS = 3;
    
    private static final byte ACO_JIS = 13;
    
    private static final byte ACOP_JIS = 23;
    
    public static void initBestCopyAlgoIndexByCopyUseCaseIndex(byte[] a) {
        populateArrForSrc_CUSTOM(a);
        populateArrForSrc_RGB(a);
        populateArrForSrc_ARGB(a);
        populateArrForSrc_ARGB_P(a);
        populateArrForSrc_BGR(a);
        populateArrForSrc_B_BGR(a);
        populateArrForSrc_B_ABGR(a);
        populateArrForSrc_B_ABGR_P(a);
        populateArrForSrc_S_6_RGB(a);
        populateArrForSrc_S_5_RGB(a);
        populateArrForSrc_B_GRAY(a);
        populateArrForSrc_S_GRAY(a);
        populateArrForSrc_B_BIN(a);
        populateArrForSrc_B_IND(a);
        populateArrForSrc_CUSTOM_P(a);
    }
    
    private static void populateArrForSrc_CUSTOM(byte[] a) {
        a[0] /* CUSTOM->CUSTOM */ = JIS; // 0.00099:JIS(0), 0.003962:ACO_JIS(0), 0.040777:ACOP_JIS(255), (...) 0.090211:ACO_AWT(0), (...) 0.158883:AWT(255)
        a[1] /* CUSTOM->RGB */ = JIS; // 0.001972:JIS(0), 0.002343:ACO_AWT(0), 0.003855:ACO_JIS(0), (...) 0.043043:AWT(255)
        a[2] /* CUSTOM->ARGB */ = AWT; // 0.001891:AWT(0), 0.00203:JIS(0), 0.040834:ACOP_JIS(255)
        a[3] /* CUSTOM->ARGB_P */ = ACO_AWT; // 0.003058:ACO_AWT(0), 0.003675:ACO_JIS(0), 0.004159:JIS(0), (...) 0.039174:AWT(0)
        a[4] /* CUSTOM->BGR */ = ACO_AWT; // 0.002372:ACO_AWT(0), 0.002912:JIS(0), 0.004831:ACO_JIS(0), (...) 0.044083:AWT(255)
        a[5] /* CUSTOM->B_BGR */ = ACO_AWT; // 0.002253:ACO_AWT(0), 0.040822:ACOP_AWT(255), 0.043326:AWT(255), (...) 0.103527:JIS(0)
        a[6] /* CUSTOM->B_ABGR */ = ACO_AWT; // 0.002411:ACO_AWT(0), 0.041004:ACOP_AWT(255), 0.043762:AWT(255), (...) 0.085033:ACOP_JIS(255), (...) 0.091715:JIS(0)
        a[7] /* CUSTOM->B_ABGR_P */ = ACO_AWT; // 0.002892:ACO_AWT(0), 0.035636:AWT(0), 0.040581:ACOP_AWT(0), (...) 0.092253:JIS(0)
        a[8] /* CUSTOM->S_6_RGB */ = ACO_AWT; // 0.002353:ACO_AWT(0), 0.003034:JIS(0), 0.004819:ACO_JIS(0), (...) 0.044538:AWT(255)
        a[9] /* CUSTOM->S_5_RGB */ = ACO_AWT; // 0.002358:ACO_AWT(0), 0.00493:JIS(0), 0.006437:ACO_JIS(0), (...) 0.043921:AWT(255)
        a[10] /* CUSTOM->B_GRAY */ = ACO_AWT; // 0.002653:ACO_AWT(1), 0.005078:JIS(0), 0.006676:ACO_JIS(0), (...) 0.043126:AWT(255)
        a[11] /* CUSTOM->S_GRAY */ = ACO_AWT; // 0.002648:ACO_AWT(1), 0.005505:JIS(0), 0.006909:ACO_JIS(0), (...) 0.042028:AWT(255)
        a[12] /* CUSTOM->B_BIN */ = ACO_BW_ACO_AWT; // 0.002641:ACO_AWT(53), 0.003789:ACO_BW_ACO_AWT(0), 0.024743:ACO_BW_CO_AWT(0), (...) 0.051005:AWT(61), (...) 0.481813:JIS(0)
        a[13] /* CUSTOM->B_IND */ = ACO_AWT; // 0.004718:ACO_AWT(81), 0.041586:ACOP_AWT(255), 0.048272:CO_AWT(255), (...) 0.087066:AWT(255), (...) 1.977196:CO_JIS(255), (...) 2.801391:JIS(0)
        a[14] /* CUSTOM->CUSTOM_P */ = JIS; // 0.001985:JIS(0), 0.007993:ACO_JIS(0), 0.052993:ACOP_JIS(0), (...) 0.062765:ACO_AWT(0), (...) 0.158174:AWT(0)
    }
    
    private static void populateArrForSrc_RGB(byte[] a) {
        a[16] /* RGB->CUSTOM */ = JIS; // 0.002715:JIS(0), 0.003211:ACO_JIS(0), 0.003548:ACOP_JIS(0), (...) 0.092237:ACO_AWT(0), (...) 0.132874:AWT(0)
        a[17] /* RGB->RGB */ = AWT; // 0.000842:AWT(0), 0.001779:ACO_AWT(0), 0.002577:ACOP_AWT(0)
        a[18] /* RGB->ARGB */ = AWT; // 0.000825:AWT(0), 0.001803:ACOP_AWT(0)
        a[19] /* RGB->ARGB_P */ = AWT; // 0.000803:AWT(0), 0.001793:ACO_AWT(0)
        a[20] /* RGB->BGR */ = AWT; // 0.000759:AWT(0), 0.001719:ACO_AWT(0), 0.002448:ACOP_AWT(0)
        a[21] /* RGB->B_BGR */ = AWT; // 0.000535:AWT(0), 0.001327:ACO_AWT(0), 0.002432:ACOP_AWT(0)
        a[22] /* RGB->B_ABGR */ = AWT; // 0.000648:AWT(0), 0.001706:ACO_AWT(0), 0.002409:ACOP_AWT(0)
        a[23] /* RGB->B_ABGR_P */ = AWT; // 0.000697:AWT(0), 0.00171:ACO_AWT(0), 0.002374:ACOP_AWT(0)
        a[24] /* RGB->S_6_RGB */ = AWT; // 0.000516:AWT(0), 0.001104:ACO_AWT(0), 0.002626:ACOP_AWT(0)
        a[25] /* RGB->S_5_RGB */ = AWT; // 0.000513:AWT(0), 0.001143:ACO_AWT(0), 0.002502:ACOP_AWT(0)
        a[26] /* RGB->B_GRAY */ = AWT; // 0.000805:AWT(1), 0.001136:ACO_AWT(1), 0.002707:ACOP_AWT(1)
        a[27] /* RGB->S_GRAY */ = AWT; // 0.000811:AWT(1), 0.001077:BW_AWT(1), 0.001218:ACO_AWT(1)
        a[28] /* RGB->B_BIN */ = BW_ACO_AWT; // 0.00121:ACO_AWT(53), 0.002103:BW_ACO_AWT(0), 0.002378:ACO_BW_ACO_AWT(0), (...) 0.02231:AWT(53)
        a[29] /* RGB->B_IND */ = AWT; // 0.002881:AWT(81), 0.003188:ACO_AWT(81), 0.005522:ACOP_AWT(81)
        a[30] /* RGB->CUSTOM_P */ = JIS; // 0.002998:JIS(0), 0.00338:ACO_JIS(0), 0.003392:ACOP_JIS(0), (...) 0.061527:ACO_AWT(0), (...) 0.105734:AWT(0)
    }
    
    private static void populateArrForSrc_ARGB(byte[] a) {
        a[32] /* ARGB->CUSTOM */ = JIS; // 0.002804:JIS(0), 0.006214:ACOP_JIS(255), 0.092245:AWT(0)
        a[33] /* ARGB->RGB */ = AWT; // 0.000841:AWT(0), 0.004079:ACOP_AWT(255)
        a[34] /* ARGB->ARGB */ = AWT; // 0.000851:AWT(0), 0.002631:ACOP_AWT(255)
        a[35] /* ARGB->ARGB_P */ = AWT; // 0.001221:AWT(0)
        a[36] /* ARGB->BGR */ = AWT; // 0.000749:AWT(0), 0.001713:CO_AWT(0), 0.004042:ACOP_AWT(255)
        a[37] /* ARGB->B_BGR */ = AWT; // 0.000488:AWT(0), 0.001344:CO_AWT(0), 0.004037:ACOP_AWT(255)
        a[38] /* ARGB->B_ABGR */ = AWT; // 0.00071:AWT(0), 0.003998:ACOP_AWT(255)
        a[39] /* ARGB->B_ABGR_P */ = AWT; // 0.001038:AWT(0), 0.003174:ACOP_AWT(0)
        a[40] /* ARGB->S_6_RGB */ = AWT; // 0.000528:AWT(0), 0.001104:CO_AWT(0), 0.004263:ACOP_AWT(255)
        a[41] /* ARGB->S_5_RGB */ = AWT; // 0.000524:AWT(0), 0.001052:CO_AWT(0), 0.00424:ACOP_AWT(255)
        a[42] /* ARGB->B_GRAY */ = AWT; // 0.000813:AWT(1), 0.001064:CO_AWT(1), 0.004159:ACOP_AWT(255)
        a[43] /* ARGB->S_GRAY */ = AWT; // 0.000842:AWT(1), 0.001145:BW_AWT(1), 0.001269:CO_AWT(1)
        a[44] /* ARGB->B_BIN */ = BW_ACO_AWT; // 0.000894:AWT(53), 0.002111:BW_ACO_AWT(0), 0.002415:CO_BW_ACO_AWT(0)
        a[45] /* ARGB->B_IND */ = AWT; // 0.002871:AWT(81), 0.00308:CO_AWT(81), 0.006912:ACOP_AWT(255)
        a[46] /* ARGB->CUSTOM_P */ = JIS; // 0.004024:ACOP_JIS(0), 0.004119:JIS(0), 0.06159:AWT(0)
    }
    
    private static void populateArrForSrc_ARGB_P(byte[] a) {
        a[48] /* ARGB_P->CUSTOM */ = ACO_JIS; // 0.004104:ACO_JIS(1), 0.004627:JIS(0), 0.09271:ACO_AWT(1), (...) 0.161985:AWT(1)
        a[49] /* ARGB_P->RGB */ = ACO_AWT; // 0.001832:ACO_AWT(1), 0.002628:AWT(1)
        a[50] /* ARGB_P->ARGB */ = AWT; // 0.001219:AWT(1)
        a[51] /* ARGB_P->ARGB_P */ = AWT; // 0.000812:AWT(0), 0.002554:ACO_AWT(0)
        a[52] /* ARGB_P->BGR */ = ACO_AWT; // 0.001956:ACO_AWT(1), 0.002582:AWT(1), 0.003195:CO_AWT(1)
        a[53] /* ARGB_P->B_BGR */ = ACO_AWT; // 0.001812:ACO_AWT(1), 0.002602:AWT(1), 0.003081:CO_AWT(1)
        a[54] /* ARGB_P->B_ABGR */ = ACO_AWT; // 0.002067:ACO_AWT(1), 0.002581:AWT(1)
        a[55] /* ARGB_P->B_ABGR_P */ = AWT; // 0.001823:AWT(0), 0.002419:ACO_AWT(0)
        a[56] /* ARGB_P->S_6_RGB */ = ACO_AWT; // 0.001873:ACO_AWT(9), 0.002885:AWT(9), 0.003336:CO_AWT(9)
        a[57] /* ARGB_P->S_5_RGB */ = ACO_AWT; // 0.001867:ACO_AWT(9), 0.002814:AWT(9), 0.003368:CO_AWT(9)
        a[58] /* ARGB_P->B_GRAY */ = ACO_AWT; // 0.002166:ACO_AWT(2), 0.002735:AWT(105), 0.003635:CO_AWT(2)
        a[59] /* ARGB_P->S_GRAY */ = ACO_AWT; // 0.002162:ACO_AWT(2), 0.003055:BW_AWT(105), 0.003185:AWT(1)
        a[60] /* ARGB_P->B_BIN */ = ACO_BW_ACO_AWT; // 0.002236:ACO_AWT(48), 0.003433:ACO_BW_ACO_AWT(0), 0.004089:BW_ACO_AWT(3), (...) 0.048869:AWT(48)
        a[61] /* ARGB_P->B_IND */ = ACO_AWT; // 0.004242:ACO_AWT(81), 0.005735:AWT(81), 0.005885:CO_AWT(81)
        a[62] /* ARGB_P->CUSTOM_P */ = JIS; // 0.002801:JIS(0), 0.005474:ACO_JIS(0), 0.06206:ACO_AWT(0), (...) 0.137783:AWT(0)
    }
    
    private static void populateArrForSrc_BGR(byte[] a) {
        a[64] /* BGR->CUSTOM */ = JIS; // 0.002879:JIS(0), 0.0032:CO_JIS(0), 0.003267:ACO_JIS(0), (...) 0.092454:ACO_AWT(0), (...) 0.127392:AWT(0)
        a[65] /* BGR->RGB */ = AWT; // 0.000803:AWT(0), 0.001661:ACO_AWT(0), 0.018843:ACOP_AWT(0)
        a[66] /* BGR->ARGB */ = AWT; // 0.000713:AWT(0), 0.001683:CO_AWT(0), 0.018651:ACOP_AWT(0)
        a[67] /* BGR->ARGB_P */ = CO_AWT; // 0.001674:CO_AWT(0), 0.001734:ACO_AWT(0), 0.017903:AWT(0)
        a[68] /* BGR->BGR */ = AWT; // 0.000788:AWT(0), 0.001663:ACO_AWT(0), 0.001684:CO_AWT(0)
        a[69] /* BGR->B_BGR */ = CO_AWT; // 0.001387:CO_AWT(0), 0.001471:ACO_AWT(0), 0.017816:AWT(0)
        a[70] /* BGR->B_ABGR */ = ACO_AWT; // 0.001733:ACO_AWT(0), 0.001741:CO_AWT(0), 0.017342:AWT(0)
        a[71] /* BGR->B_ABGR_P */ = CO_AWT; // 0.001719:CO_AWT(0), 0.001724:ACO_AWT(0), 0.016141:AWT(0)
        a[72] /* BGR->S_6_RGB */ = CO_AWT; // 0.001149:CO_AWT(0), 0.001187:ACO_AWT(0), 0.017233:AWT(0)
        a[73] /* BGR->S_5_RGB */ = ACO_AWT; // 0.001179:ACO_AWT(0), 0.001194:CO_AWT(0), 0.017485:AWT(0)
        a[74] /* BGR->B_GRAY */ = CO_AWT; // 0.001345:CO_AWT(1), 0.00137:ACO_AWT(1), 0.017542:AWT(1)
        a[75] /* BGR->S_GRAY */ = CO_AWT; // 0.00138:CO_AWT(1), 0.00142:ACO_AWT(1), 0.018687:ACOP_AWT(1), (...) 0.02004:AWT(1)
        a[76] /* BGR->B_BIN */ = ACO_BW_ACO_AWT; // 0.001502:ACO_AWT(53), 0.002665:ACO_BW_ACO_AWT(0), 0.002818:CO_BW_ACO_AWT(0), (...) 0.024999:AWT(53)
        a[77] /* BGR->B_IND */ = ACO_AWT; // 0.003352:ACO_AWT(81), 0.003395:CO_AWT(81), 0.019001:ACOP_AWT(81), (...) 0.051307:AWT(81)
        a[78] /* BGR->CUSTOM_P */ = JIS; // 0.003052:JIS(0), 0.003441:CO_JIS(0), 0.003605:ACO_JIS(0), (...) 0.062021:ACO_AWT(0), (...) 0.110679:AWT(0)
    }
    
    private static void populateArrForSrc_B_BGR(byte[] a) {
        a[80] /* B_BGR->CUSTOM */ = CO_JIS; // 0.003146:CO_JIS(0), 0.003264:ACO_JIS(0), 0.003503:ACOP_JIS(0), (...) 0.012751:JIS(0), (...) 0.092439:ACO_AWT(0), (...) 0.1257:AWT(0)
        a[81] /* B_BGR->RGB */ = AWT; // 0.000534:AWT(0), 0.001443:ACO_AWT(0), 0.002587:ACOP_AWT(0)
        a[82] /* B_BGR->ARGB */ = AWT; // 0.000531:AWT(0), 0.001423:ACOP_AWT(0), 0.001592:CO_AWT(0)
        a[83] /* B_BGR->ARGB_P */ = AWT; // 0.00059:AWT(0), 0.001402:ACO_AWT(0), 0.001415:CO_AWT(0)
        a[84] /* B_BGR->BGR */ = AWT; // 0.000568:AWT(0), 0.001434:CO_AWT(0), 0.001446:ACO_AWT(0)
        a[85] /* B_BGR->B_BGR */ = AWT; // 0.00036:AWT(0), 0.001105:CO_AWT(0), 0.001163:ACO_AWT(0)
        a[86] /* B_BGR->B_ABGR */ = AWT; // 0.0006:AWT(0), 0.001464:ACO_AWT(0), 0.001514:CO_AWT(0)
        a[87] /* B_BGR->B_ABGR_P */ = AWT; // 0.000592:AWT(0), 0.001453:ACO_AWT(0), 0.001464:CO_AWT(0)
        a[88] /* B_BGR->S_6_RGB */ = AWT; // 0.000518:AWT(0), 0.000997:CO_AWT(0), 0.001078:ACO_AWT(0)
        a[89] /* B_BGR->S_5_RGB */ = AWT; // 0.000523:AWT(0), 0.001018:CO_AWT(0), 0.001381:ACO_AWT(0)
        a[90] /* B_BGR->B_GRAY */ = AWT; // 0.000643:AWT(1), 0.001332:CO_AWT(1), 0.001338:ACO_AWT(1)
        a[91] /* B_BGR->S_GRAY */ = AWT; // 0.000641:AWT(1), 0.000906:BW_AWT(1), 0.00127:CO_AWT(1)
        a[92] /* B_BGR->B_BIN */ = BW_ACO_AWT; // 0.00141:ACO_AWT(53), 0.00205:BW_ACO_AWT(0), 0.002592:ACO_BW_ACO_AWT(0), (...) 0.024726:AWT(53)
        a[93] /* B_BGR->B_IND */ = AWT; // 0.002856:AWT(81), 0.003253:CO_AWT(81), 0.003372:ACO_AWT(81)
        a[94] /* B_BGR->CUSTOM_P */ = CO_JIS; // 0.003319:CO_JIS(0), 0.003352:ACOP_JIS(0), 0.003432:ACO_JIS(0), (...) 0.012561:JIS(0), (...) 0.061802:ACO_AWT(0), (...) 0.1137:AWT(0)
    }
    
    private static void populateArrForSrc_B_ABGR(byte[] a) {
        a[96] /* B_ABGR->CUSTOM */ = ACO_JIS; // 0.003283:ACO_JIS(0), 0.013909:JIS(0), 0.030121:ACOP_JIS(255), (...) 0.09189:ACO_AWT(0), (...) 0.144991:AWT(255)
        a[97] /* B_ABGR->RGB */ = ACO_AWT; // 0.001677:ACO_AWT(0), 0.030122:ACOP_AWT(255), 0.032539:AWT(255)
        a[98] /* B_ABGR->ARGB */ = AWT; // 0.000713:AWT(0), 0.030005:ACOP_AWT(255)
        a[99] /* B_ABGR->ARGB_P */ = ACO_AWT; // 0.001915:ACO_AWT(0), 0.028827:AWT(0)
        a[100] /* B_ABGR->BGR */ = ACO_AWT; // 0.001685:ACO_AWT(0), 0.030102:ACOP_AWT(255), 0.034312:AWT(255)
        a[101] /* B_ABGR->B_BGR */ = ACO_AWT; // 0.001405:ACO_AWT(0), 0.030011:ACOP_AWT(255), 0.034118:AWT(255)
        a[102] /* B_ABGR->B_ABGR */ = AWT; // 0.000829:AWT(0), 0.001735:ACO_AWT(0), 0.030094:ACOP_AWT(255)
        a[103] /* B_ABGR->B_ABGR_P */ = ACO_AWT; // 0.001858:ACO_AWT(0), 0.027637:AWT(0), 0.029893:ACOP_AWT(0)
        a[104] /* B_ABGR->S_6_RGB */ = ACO_AWT; // 0.001152:ACO_AWT(0), 0.030059:ACOP_AWT(255), 0.035267:CO_AWT(255), (...) 0.036035:AWT(255)
        a[105] /* B_ABGR->S_5_RGB */ = ACO_AWT; // 0.001193:ACO_AWT(0), 0.030123:ACOP_AWT(255), 0.033556:AWT(255)
        a[106] /* B_ABGR->B_GRAY */ = ACO_AWT; // 0.00151:ACO_AWT(1), 0.030163:ACOP_AWT(255), 0.031204:AWT(255)
        a[107] /* B_ABGR->S_GRAY */ = ACO_AWT; // 0.001398:ACO_AWT(1), 0.029922:ACOP_AWT(255), 0.031006:AWT(255)
        a[108] /* B_ABGR->B_BIN */ = ACO_BW_ACO_AWT; // 0.001445:ACO_AWT(53), 0.0026:ACO_BW_ACO_AWT(0), 0.024692:ACO_BW_CO_AWT(0), (...) 0.042352:AWT(61)
        a[109] /* B_ABGR->B_IND */ = ACO_AWT; // 0.003383:ACO_AWT(81), 0.030121:ACOP_AWT(255), 0.036695:CO_AWT(255), (...) 0.073447:AWT(255)
        a[110] /* B_ABGR->CUSTOM_P */ = ACO_JIS; // 0.004862:ACO_JIS(0), 0.016096:JIS(0), 0.029818:ACOP_JIS(0), (...) 0.061831:ACO_AWT(0), (...) 0.123013:AWT(0)
    }
    
    private static void populateArrForSrc_B_ABGR_P(byte[] a) {
        a[112] /* B_ABGR_P->CUSTOM */ = ACO_JIS; // 0.00411:ACO_JIS(1), 0.018481:JIS(0), 0.037324:ACOP_JIS(1), (...) 0.092894:ACO_AWT(1), (...) 0.147426:AWT(1)
        a[113] /* B_ABGR_P->RGB */ = ACO_AWT; // 0.001818:ACO_AWT(1), 0.03718:ACOP_AWT(1), 0.038933:AWT(1)
        a[114] /* B_ABGR_P->ARGB */ = AWT; // 0.001075:AWT(1), 0.036916:ACOP_AWT(1)
        a[115] /* B_ABGR_P->ARGB_P */ = ACO_AWT; // 0.002374:ACO_AWT(0), 0.035673:AWT(0)
        a[116] /* B_ABGR_P->BGR */ = ACO_AWT; // 0.001837:ACO_AWT(1), 0.037171:ACOP_AWT(1), 0.037855:AWT(1)
        a[117] /* B_ABGR_P->B_BGR */ = ACO_AWT; // 0.001615:ACO_AWT(1), 0.03704:ACOP_AWT(1), 0.041631:AWT(1)
        a[118] /* B_ABGR_P->B_ABGR */ = ACO_AWT; // 0.001887:ACO_AWT(1), 0.037271:ACOP_AWT(1), 0.040639:AWT(1)
        a[119] /* B_ABGR_P->B_ABGR_P */ = AWT; // 0.000929:AWT(0), 0.00224:ACO_AWT(0), 0.037028:ACOP_AWT(0)
        a[120] /* B_ABGR_P->S_6_RGB */ = ACO_AWT; // 0.001664:ACO_AWT(9), 0.03704:ACOP_AWT(9), 0.039256:AWT(9)
        a[121] /* B_ABGR_P->S_5_RGB */ = ACO_AWT; // 0.001638:ACO_AWT(9), 0.03708:ACOP_AWT(9), 0.043305:AWT(9)
        a[122] /* B_ABGR_P->B_GRAY */ = ACO_AWT; // 0.001891:ACO_AWT(2), 0.036894:AWT(105), 0.037032:ACOP_AWT(105)
        a[123] /* B_ABGR_P->S_GRAY */ = ACO_AWT; // 0.001892:ACO_AWT(2), 0.037141:AWT(2), 0.037142:ACOP_AWT(1)
        a[124] /* B_ABGR_P->B_BIN */ = ACO_BW_ACO_AWT; // 0.00201:ACO_AWT(48), 0.003287:ACO_BW_ACO_AWT(0), 0.024827:ACO_BW_CO_AWT(0), (...) 0.048734:AWT(48)
        a[125] /* B_ABGR_P->B_IND */ = ACO_AWT; // 0.004216:ACO_AWT(81), 0.037171:ACOP_AWT(81), 0.043358:CO_AWT(81), (...) 0.082982:AWT(81)
        a[126] /* B_ABGR_P->CUSTOM_P */ = ACO_JIS; // 0.005601:ACO_JIS(0), 0.020932:JIS(0), 0.036969:ACOP_JIS(0), (...) 0.062073:ACO_AWT(0), (...) 0.13157:AWT(0)
    }
    
    private static void populateArrForSrc_S_6_RGB(byte[] a) {
        a[128] /* S_6_RGB->CUSTOM */ = JIS; // 0.002458:JIS(0), 0.003812:ACO_JIS(0), 0.02139:CO_JIS(0), (...) 0.092833:ACO_AWT(0), (...) 0.136637:AWT(0)
        a[129] /* S_6_RGB->RGB */ = ACO_AWT; // 0.001238:ACO_AWT(0), 0.020364:AWT(0), 0.021559:ACOP_AWT(0)
        a[130] /* S_6_RGB->ARGB */ = AWT; // 0.000894:AWT(0), 0.02133:ACOP_AWT(0), 0.021336:CO_AWT(0)
        a[131] /* S_6_RGB->ARGB_P */ = ACO_AWT; // 0.001382:ACO_AWT(0), 0.020295:AWT(0), 0.021357:CO_AWT(0)
        a[132] /* S_6_RGB->BGR */ = ACO_AWT; // 0.001392:ACO_AWT(0), 0.018799:AWT(0), 0.021324:CO_AWT(0)
        a[133] /* S_6_RGB->B_BGR */ = ACO_AWT; // 0.001308:ACO_AWT(0), 0.021206:AWT(0), 0.021363:CO_AWT(0)
        a[134] /* S_6_RGB->B_ABGR */ = ACO_AWT; // 0.001429:ACO_AWT(0), 0.021072:AWT(0), 0.021488:ACOP_AWT(0)
        a[135] /* S_6_RGB->B_ABGR_P */ = ACO_AWT; // 0.001537:ACO_AWT(0), 0.020028:AWT(0), 0.02146:CO_AWT(0)
        a[136] /* S_6_RGB->S_6_RGB */ = AWT; // 0.000179:AWT(0), 0.001452:ACO_AWT(0), 0.021854:CO_AWT(0)
        a[137] /* S_6_RGB->S_5_RGB */ = ACO_AWT; // 0.001424:ACO_AWT(0), 0.020523:AWT(0), 0.021463:CO_AWT(0)
        a[138] /* S_6_RGB->B_GRAY */ = ACO_AWT; // 0.001839:ACO_AWT(1), 0.020694:AWT(1), 0.021277:CO_AWT(1)
        a[139] /* S_6_RGB->S_GRAY */ = ACO_AWT; // 0.001726:ACO_AWT(1), 0.021378:CO_AWT(1), 0.021504:ACOP_AWT(1), (...) 0.022333:AWT(1)
        a[140] /* S_6_RGB->B_BIN */ = ACO_BW_ACO_AWT; // 0.001809:ACO_AWT(53), 0.002973:ACO_BW_ACO_AWT(0), 0.02164:CO_BW_ACO_AWT(0), (...) 0.028285:AWT(53)
        a[141] /* S_6_RGB->B_IND */ = ACO_AWT; // 0.003875:ACO_AWT(81), 0.021778:ACOP_AWT(81), 0.021779:CO_AWT(81), (...) 0.058048:AWT(81)
        a[142] /* S_6_RGB->CUSTOM_P */ = JIS; // 0.002544:JIS(0), 0.00422:ACO_JIS(0), 0.021685:ACOP_JIS(0), (...) 0.062104:ACO_AWT(0), (...) 0.114085:AWT(0)
    }
    
    private static void populateArrForSrc_S_5_RGB(byte[] a) {
        a[144] /* S_5_RGB->CUSTOM */ = JIS; // 0.003037:JIS(0), 0.003884:ACO_JIS(0), 0.022088:CO_JIS(0), (...) 0.092771:ACO_AWT(0), (...) 0.137776:AWT(0)
        a[145] /* S_5_RGB->RGB */ = ACO_AWT; // 0.001266:ACO_AWT(0), 0.020921:AWT(0), 0.02203:ACOP_AWT(0)
        a[146] /* S_5_RGB->ARGB */ = AWT; // 0.000935:AWT(0), 0.021731:ACOP_AWT(0), 0.021868:CO_AWT(0)
        a[147] /* S_5_RGB->ARGB_P */ = ACO_AWT; // 0.001399:ACO_AWT(0), 0.021034:AWT(0), 0.021674:CO_AWT(0)
        a[148] /* S_5_RGB->BGR */ = ACO_AWT; // 0.001598:ACO_AWT(0), 0.019619:AWT(0), 0.021826:CO_AWT(0)
        a[149] /* S_5_RGB->B_BGR */ = ACO_AWT; // 0.001475:ACO_AWT(0), 0.021701:CO_AWT(0), 0.021925:ACOP_AWT(0), (...) 0.022059:AWT(0)
        a[150] /* S_5_RGB->B_ABGR */ = ACO_AWT; // 0.001484:ACO_AWT(0), 0.021607:AWT(0), 0.021807:CO_AWT(0)
        a[151] /* S_5_RGB->B_ABGR_P */ = ACO_AWT; // 0.001603:ACO_AWT(0), 0.021005:AWT(0), 0.021774:CO_AWT(0)
        a[152] /* S_5_RGB->S_6_RGB */ = ACO_AWT; // 0.001462:ACO_AWT(0), 0.02139:AWT(0), 0.021782:CO_AWT(0)
        a[153] /* S_5_RGB->S_5_RGB */ = AWT; // 0.000179:AWT(0), 0.001453:ACO_AWT(0), 0.021687:CO_AWT(0)
        a[154] /* S_5_RGB->B_GRAY */ = ACO_AWT; // 0.001754:ACO_AWT(1), 0.021186:AWT(1), 0.02182:CO_AWT(1)
        a[155] /* S_5_RGB->S_GRAY */ = ACO_AWT; // 0.001788:ACO_AWT(1), 0.021878:CO_AWT(1), 0.022054:ACOP_AWT(1), (...) 0.023021:AWT(1)
        a[156] /* S_5_RGB->B_BIN */ = ACO_BW_ACO_AWT; // 0.001831:ACO_AWT(53), 0.003005:ACO_BW_ACO_AWT(0), 0.022126:CO_BW_ACO_AWT(0), (...) 0.02802:AWT(53)
        a[157] /* S_5_RGB->B_IND */ = ACO_AWT; // 0.003931:ACO_AWT(81), 0.022195:CO_AWT(81), 0.022363:ACOP_AWT(81), (...) 0.057417:AWT(81)
        a[158] /* S_5_RGB->CUSTOM_P */ = JIS; // 0.002446:JIS(0), 0.004039:ACO_JIS(0), 0.022062:ACOP_JIS(0), (...) 0.061976:ACO_AWT(0), (...) 0.11547:AWT(0)
    }
    
    private static void populateArrForSrc_B_GRAY(byte[] a) {
        a[160] /* B_GRAY->CUSTOM */ = JIS; // 0.002044:JIS(0), 0.003224:CO_JIS(0), 0.003351:ACO_JIS(0), (...) 0.092762:ACO_AWT(0), (...) 0.127331:AWT(0)
        a[161] /* B_GRAY->RGB */ = AWT; // 0.000383:AWT(0), 0.001037:ACO_AWT(0), 0.00278:ACOP_AWT(0)
        a[162] /* B_GRAY->ARGB */ = AWT; // 0.000408:AWT(0), 0.000939:CO_AWT(0), 0.001048:ACOP_AWT(0)
        a[163] /* B_GRAY->ARGB_P */ = AWT; // 0.000603:AWT(0), 0.001001:ACO_AWT(0), 0.001025:CO_AWT(0)
        a[164] /* B_GRAY->BGR */ = AWT; // 0.000387:AWT(0), 0.001018:CO_AWT(0), 0.001084:ACO_AWT(0)
        a[165] /* B_GRAY->B_BGR */ = AWT; // 0.000445:AWT(0), 0.000891:CO_AWT(0), 0.000957:ACO_AWT(0)
        a[166] /* B_GRAY->B_ABGR */ = AWT; // 0.000596:AWT(0), 0.001098:CO_AWT(0), 0.001125:ACO_AWT(0)
        a[167] /* B_GRAY->B_ABGR_P */ = AWT; // 0.000603:AWT(0), 0.001072:CO_AWT(0), 0.001125:ACO_AWT(0)
        a[168] /* B_GRAY->S_6_RGB */ = AWT; // 0.000504:AWT(0), 0.00091:CO_AWT(0), 0.000951:ACO_AWT(0)
        a[169] /* B_GRAY->S_5_RGB */ = AWT; // 0.000501:AWT(0), 0.000927:CO_AWT(0), 0.000981:ACO_AWT(0)
        a[170] /* B_GRAY->B_GRAY */ = AWT; // 0.000114:AWT(0), 0.001202:CO_AWT(0), 0.001232:ACO_AWT(0)
        a[171] /* B_GRAY->S_GRAY */ = AWT; // 0.000268:AWT(0), 0.001221:CO_AWT(0), 0.001252:ACO_AWT(0)
        a[172] /* B_GRAY->B_BIN */ = ACO_AWT; // 0.001298:ACO_AWT(0), 0.002483:ACO_BW_ACO_AWT(0), 0.002749:CO_BW_ACO_AWT(0), (...) 0.02426:AWT(0)
        a[173] /* B_GRAY->B_IND */ = AWT; // 0.001243:AWT(51), 0.001781:CO_AWT(51), 0.001816:ACO_AWT(51)
        a[174] /* B_GRAY->CUSTOM_P */ = JIS; // 0.00198:JIS(0), 0.00338:CO_JIS(0), 0.003436:ACO_JIS(0), (...) 0.061904:ACO_AWT(0), (...) 0.114873:AWT(0)
    }
    
    private static void populateArrForSrc_S_GRAY(byte[] a) {
        a[176] /* S_GRAY->CUSTOM */ = JIS; // 0.002113:JIS(0), 0.002289:BW_JIS(0), 0.00338:ACO_JIS(0), (...) 0.092402:ACO_AWT(0), (...) 0.134058:AWT(0)
        a[177] /* S_GRAY->RGB */ = BW_AWT; // 0.000727:BW_AWT(0), 0.001134:ACO_AWT(0), 0.017016:AWT(0)
        a[178] /* S_GRAY->ARGB */ = AWT; // 0.000431:AWT(0), 0.000773:BW_AWT(0), 0.017891:ACOP_AWT(0)
        a[179] /* S_GRAY->ARGB_P */ = BW_AWT; // 0.000972:BW_AWT(0), 0.001138:ACO_AWT(0), 0.017041:AWT(0)
        a[180] /* S_GRAY->BGR */ = BW_AWT; // 0.000731:BW_AWT(0), 0.001149:ACO_AWT(0), 0.016437:AWT(0)
        a[181] /* S_GRAY->B_BGR */ = BW_AWT; // 0.000742:BW_AWT(0), 0.001013:ACO_AWT(0), 0.017939:CO_AWT(0), (...) 0.018231:AWT(0)
        a[182] /* S_GRAY->B_ABGR */ = BW_AWT; // 0.000864:BW_AWT(0), 0.001201:ACO_AWT(0), 0.017522:AWT(0)
        a[183] /* S_GRAY->B_ABGR_P */ = BW_AWT; // 0.000833:BW_AWT(0), 0.001227:ACO_AWT(0), 0.017025:AWT(0)
        a[184] /* S_GRAY->S_6_RGB */ = BW_AWT; // 0.000837:BW_AWT(0), 0.001001:ACO_AWT(0), 0.01717:AWT(0)
        a[185] /* S_GRAY->S_5_RGB */ = BW_AWT; // 0.000849:BW_AWT(0), 0.001005:ACO_AWT(0), 0.017079:AWT(0)
        a[186] /* S_GRAY->B_GRAY */ = AWT; // 0.000321:AWT(0), 0.001292:ACO_AWT(0), 0.017848:CO_AWT(0)
        a[187] /* S_GRAY->S_GRAY */ = AWT; // 0.000196:AWT(0), 0.000585:BW_AWT(0), 0.001255:ACO_AWT(0)
        a[188] /* S_GRAY->B_BIN */ = ACO_AWT; // 0.001304:ACO_AWT(0), 0.001605:BW_ACO_AWT(0), 0.002461:ACO_BW_ACO_AWT(0), (...) 0.024128:AWT(0)
        a[189] /* S_GRAY->B_IND */ = BW_AWT; // 0.001552:BW_AWT(51), 0.002251:ACO_AWT(51), 0.0176:ACOP_AWT(51), (...) 0.027804:AWT(51)
        a[190] /* S_GRAY->CUSTOM_P */ = JIS; // 0.002435:BW_JIS(0), 0.00252:JIS(0), 0.003369:ACO_JIS(0), (...) 0.061802:ACO_AWT(0), (...) 0.116061:AWT(0)
    }
    
    private static void populateArrForSrc_B_BIN(byte[] a) {
        a[192] /* B_BIN->CUSTOM */ = ACO_JIS; // 0.003555:ACO_JIS(0), 0.008638:JIS(0), 0.019362:ACOP_JIS(0), (...) 0.092581:ACO_AWT(0), (...) 0.128801:AWT(0)
        a[193] /* B_BIN->RGB */ = ACO_AWT; // 0.000929:ACO_AWT(0), 0.01814:AWT(0), 0.019188:ACOP_AWT(0)
        a[194] /* B_BIN->ARGB */ = AWT; // 0.00061:AWT(0), 0.018943:CO_AWT(0), 0.019056:ACOP_AWT(0)
        a[195] /* B_BIN->ARGB_P */ = ACO_AWT; // 0.001047:ACO_AWT(0), 0.018125:AWT(0), 0.018969:CO_AWT(0)
        a[196] /* B_BIN->BGR */ = ACO_AWT; // 0.001145:ACO_AWT(0), 0.017203:AWT(0), 0.018982:CO_AWT(0)
        a[197] /* B_BIN->B_BGR */ = ACO_AWT; // 0.001049:ACO_AWT(0), 0.018998:CO_AWT(0), 0.019071:ACOP_AWT(0), (...) 0.01911:AWT(0)
        a[198] /* B_BIN->B_ABGR */ = ACO_AWT; // 0.001126:ACO_AWT(0), 0.019021:CO_AWT(0), 0.019091:AWT(0)
        a[199] /* B_BIN->B_ABGR_P */ = ACO_AWT; // 0.001265:ACO_AWT(0), 0.018171:AWT(0), 0.018906:CO_AWT(0)
        a[200] /* B_BIN->S_6_RGB */ = ACO_AWT; // 0.001123:ACO_AWT(0), 0.018908:CO_AWT(0), 0.019104:ACOP_AWT(0), (...) 0.019557:AWT(0)
        a[201] /* B_BIN->S_5_RGB */ = ACO_AWT; // 0.001162:ACO_AWT(0), 0.019001:CO_AWT(0), 0.019071:ACOP_AWT(0), (...) 0.019135:AWT(0)
        a[202] /* B_BIN->B_GRAY */ = ACO_AWT; // 0.001326:ACO_AWT(0), 0.018886:CO_AWT(0), 0.01911:ACOP_AWT(0), (...) 0.020427:AWT(0)
        a[203] /* B_BIN->S_GRAY */ = ACO_AWT; // 0.001337:ACO_AWT(0), 0.019027:CO_AWT(0), 0.019219:ACOP_AWT(0), (...) 0.020717:AWT(0)
        a[204] /* B_BIN->B_BIN */ = AWT; // 0.001154:AWT(0), 0.001753:ACO_AWT(0), 0.002641:ACO_BW_ACO_AWT(0)
        a[205] /* B_BIN->B_IND */ = ACO_AWT; // 0.002951:ACO_AWT(18), 0.019499:CO_AWT(18), 0.019631:ACOP_AWT(18), (...) 0.040897:AWT(18)
        a[206] /* B_BIN->CUSTOM_P */ = ACO_JIS; // 0.003573:ACO_JIS(0), 0.008468:JIS(0), 0.019405:CO_JIS(0), (...) 0.061903:ACO_AWT(0), (...) 0.114553:AWT(0)
    }
    
    private static void populateArrForSrc_B_IND(byte[] a) {
        a[208] /* B_IND->CUSTOM */ = CO_JIS; // 0.003133:CO_JIS(0), 0.003213:ACO_JIS(0), 0.003549:ACOP_JIS(0), (...) 0.008799:JIS(0), (...) 0.092686:ACO_AWT(0), (...) 0.132234:AWT(0)
        a[209] /* B_IND->RGB */ = AWT; // 0.000308:AWT(0), 0.001063:ACO_AWT(0), 0.002572:ACOP_AWT(0)
        a[210] /* B_IND->ARGB */ = AWT; // 0.000342:AWT(0), 0.000942:CO_AWT(0), 0.001124:ACOP_AWT(0)
        a[211] /* B_IND->ARGB_P */ = AWT; // 0.000422:AWT(0), 0.000955:CO_AWT(0), 0.00099:ACO_AWT(0)
        a[212] /* B_IND->BGR */ = AWT; // 0.000313:AWT(0), 0.000959:CO_AWT(0), 0.001017:ACO_AWT(0)
        a[213] /* B_IND->B_BGR */ = AWT; // 0.000474:AWT(0), 0.000863:CO_AWT(0), 0.000906:ACO_AWT(0)
        a[214] /* B_IND->B_ABGR */ = AWT; // 0.000613:AWT(0), 0.000973:ACO_AWT(0), 0.001061:CO_AWT(0)
        a[215] /* B_IND->B_ABGR_P */ = AWT; // 0.000637:AWT(0), 0.001017:ACO_AWT(0), 0.001034:CO_AWT(0)
        a[216] /* B_IND->S_6_RGB */ = AWT; // 0.000262:AWT(0), 0.000886:ACO_AWT(0), 0.000908:CO_AWT(0)
        a[217] /* B_IND->S_5_RGB */ = AWT; // 0.000255:AWT(0), 0.000864:ACO_AWT(0), 0.000865:CO_AWT(0)
        a[218] /* B_IND->B_GRAY */ = AWT; // 0.00026:AWT(1), 0.001139:ACO_AWT(1), 0.001141:CO_AWT(1)
        a[219] /* B_IND->S_GRAY */ = AWT; // 0.000263:AWT(1), 0.000531:BW_AWT(1), 0.0011:ACO_AWT(1)
        a[220] /* B_IND->B_BIN */ = BW_ACO_AWT; // 0.001171:ACO_AWT(51), 0.001535:BW_ACO_AWT(0), 0.002335:ACO_BW_ACO_AWT(0), (...) 0.022676:AWT(51)
        a[221] /* B_IND->B_IND */ = AWT; // 0.00013:AWT(0), 0.00323:CO_AWT(51), 0.003258:ACO_AWT(51)
        a[222] /* B_IND->CUSTOM_P */ = ACOP_JIS; // 0.003221:ACOP_JIS(0), 0.003244:CO_JIS(0), 0.003281:ACO_JIS(0), (...) 0.008727:JIS(0), (...) 0.062048:ACO_AWT(0), (...) 0.117847:AWT(0)
    }
    
    private static void populateArrForSrc_CUSTOM_P(byte[] a) {
        a[224] /* CUSTOM_P->CUSTOM */ = JIS; // 0.002128:JIS(0), 0.008209:ACO_JIS(1), 0.065516:ACOP_JIS(0), (...) 0.094902:ACO_AWT(1), (...) 0.181343:AWT(1)
        a[225] /* CUSTOM_P->RGB */ = JIS; // 0.004576:JIS(0), 0.004918:ACO_AWT(1), 0.007583:ACO_JIS(1), (...) 0.06645:AWT(1)
        a[226] /* CUSTOM_P->ARGB */ = JIS; // 0.004639:JIS(0), 0.004785:AWT(1), 0.06549:ACOP_AWT(1)
        a[227] /* CUSTOM_P->ARGB_P */ = JIS; // 0.003006:JIS(0), 0.006195:ACO_AWT(0), 0.007033:ACO_JIS(0), (...) 0.063504:AWT(0)
        a[228] /* CUSTOM_P->BGR */ = JIS; // 0.005211:JIS(0), 0.005509:ACO_AWT(1), 0.007933:ACO_JIS(1), (...) 0.063:AWT(1)
        a[229] /* CUSTOM_P->B_BGR */ = ACO_AWT; // 0.005425:ACO_AWT(1), 0.065574:ACOP_AWT(1), 0.06798:AWT(1), (...) 0.132959:JIS(0)
        a[230] /* CUSTOM_P->B_ABGR */ = ACO_AWT; // 0.005536:ACO_AWT(1), 0.065629:ACOP_AWT(1), 0.067159:AWT(1), (...) 0.121054:ACO_JIS(1), (...) 0.12231:JIS(0)
        a[231] /* CUSTOM_P->B_ABGR_P */ = ACO_AWT; // 0.006115:ACO_AWT(0), 0.062848:AWT(0), 0.065308:ACOP_AWT(0), (...) 0.093369:JIS(0)
        a[232] /* CUSTOM_P->S_6_RGB */ = ACO_AWT; // 0.005559:ACO_AWT(9), 0.006646:JIS(0), 0.011243:ACO_JIS(9), (...) 0.071355:AWT(9)
        a[233] /* CUSTOM_P->S_5_RGB */ = ACO_AWT; // 0.005297:ACO_AWT(9), 0.006188:JIS(0), 0.010591:ACO_JIS(9), (...) 0.066182:AWT(9)
        a[234] /* CUSTOM_P->B_GRAY */ = ACO_AWT; // 0.005447:ACO_AWT(2), 0.006587:JIS(0), 0.010558:ACO_JIS(1), (...) 0.064331:AWT(105)
        a[235] /* CUSTOM_P->S_GRAY */ = ACO_AWT; // 0.005485:ACO_AWT(2), 0.007058:JIS(0), 0.010824:ACO_JIS(1), (...) 0.064876:AWT(2)
        a[236] /* CUSTOM_P->B_BIN */ = ACO_BW_ACO_AWT; // 0.005615:ACO_AWT(48), 0.006797:ACO_BW_ACO_AWT(0), 0.025481:ACO_BW_CO_AWT(0), (...) 0.075212:AWT(48), (...) 0.500187:ACO_JIS(0), (...) 0.511475:JIS(0)
        a[237] /* CUSTOM_P->B_IND */ = ACO_AWT; // 0.007999:ACO_AWT(81), 0.066173:ACOP_AWT(81), 0.072506:CO_AWT(81), (...) 0.113594:AWT(81), (...) 2.484514:CO_JIS(57), (...) 2.910993:JIS(0)
        a[238] /* CUSTOM_P->CUSTOM_P */ = JIS; // 0.000828:JIS(0), 0.009485:ACO_JIS(0), 0.063444:ACO_AWT(0), (...) 0.158894:AWT(0)
    }
}

/*
 * Copyright 2025 Jeff Hain
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package net.jimsizr.scalers.smart.copy.gen;

/**
 * Mostly generated by BestCopyAlgoTuningMain
 * (+ eventual modifs/cleanup).
 */
public class BestCopyAlgoArrayGenSeq {
    
    private static final byte AWT = 0;
    
    private static final byte CO_AWT = 2;
    private static final byte CO_BW_ACO_AWT = 8;
    
    private static final byte ACO_AWT = 12;
    private static final byte ACO_BW_ACO_AWT = 18;
    
    private static final byte BW_AWT = 32;
    private static final byte BW_ACO_AWT = 36;
    
    private static final byte JIS = 1;
    
    private static final byte CO_JIS = 3;
    
    private static final byte ACO_JIS = 13;
    
    public static void initBestCopyAlgoIndexByCopyUseCaseIndex(byte[] a) {
        populateArrForSrc_CUSTOM(a);
        populateArrForSrc_RGB(a);
        populateArrForSrc_ARGB(a);
        populateArrForSrc_ARGB_P(a);
        populateArrForSrc_BGR(a);
        populateArrForSrc_B_BGR(a);
        populateArrForSrc_B_ABGR(a);
        populateArrForSrc_B_ABGR_P(a);
        populateArrForSrc_S_6_RGB(a);
        populateArrForSrc_S_5_RGB(a);
        populateArrForSrc_B_GRAY(a);
        populateArrForSrc_S_GRAY(a);
        populateArrForSrc_B_BIN(a);
        populateArrForSrc_B_IND(a);
        populateArrForSrc_CUSTOM_P(a);
    }
    
    private static void populateArrForSrc_CUSTOM(byte[] a) {
        a[0] /* CUSTOM->CUSTOM */ = JIS; // 0.001686:JIS(0), 0.051425:ACO_JIS(0), 0.095795:ACOP_JIS(255), (...) 0.122949:ACO_AWT(0), (...) 0.184545:AWT(255)
        a[1] /* CUSTOM->RGB */ = JIS; // 0.023315:JIS(0), 0.027592:ACO_AWT(0), 0.050967:ACO_JIS(0), (...) 0.060076:AWT(255)
        a[2] /* CUSTOM->ARGB */ = JIS; // 0.022217:JIS(0), 0.026069:AWT(0), 0.063151:ACOP_AWT(255)
        a[3] /* CUSTOM->ARGB_P */ = ACO_AWT; // 0.035187:JIS(0), 0.037206:ACO_AWT(0), 0.043197:ACO_JIS(0), (...) 0.050824:AWT(0)
        a[4] /* CUSTOM->BGR */ = JIS; // 0.022986:JIS(0), 0.029584:ACO_AWT(0), 0.047932:ACO_JIS(0), (...) 0.059372:AWT(255)
        a[5] /* CUSTOM->B_BGR */ = ACO_AWT; // 0.029451:ACO_AWT(0), 0.05774:AWT(255), 0.060264:CO_AWT(255), (...) 0.140849:JIS(0)
        a[6] /* CUSTOM->B_ABGR */ = ACO_AWT; // 0.032557:ACO_AWT(0), 0.059581:AWT(255), 0.078063:ACOP_AWT(255), (...) 0.154216:JIS(0)
        a[7] /* CUSTOM->B_ABGR_P */ = ACO_AWT; // 0.037691:ACO_AWT(0), 0.052469:AWT(0), 0.0678:ACOP_AWT(0), (...) 0.164161:JIS(0)
        a[8] /* CUSTOM->S_6_RGB */ = ACO_AWT; // 0.029825:ACO_AWT(0), 0.054987:JIS(0), 0.060868:AWT(255)
        a[9] /* CUSTOM->S_5_RGB */ = ACO_AWT; // 0.029968:ACO_AWT(0), 0.055296:JIS(0), 0.058963:AWT(255)
        a[10] /* CUSTOM->B_GRAY */ = ACO_AWT; // 0.031904:ACO_AWT(1), 0.052175:JIS(0), 0.053923:AWT(255)
        a[11] /* CUSTOM->S_GRAY */ = ACO_AWT; // 0.032089:ACO_AWT(1), 0.055201:AWT(255), 0.056635:BW_AWT(255), (...) 0.058122:JIS(0)
        a[12] /* CUSTOM->B_BIN */ = ACO_BW_ACO_AWT; // 0.0343:ACO_AWT(53), 0.043031:ACO_BW_ACO_AWT(0), 0.058404:ACO_BW_AWT(0), (...) 0.066374:AWT(61), (...) 0.222243:JIS(0)
        a[13] /* CUSTOM->B_IND */ = ACO_AWT; // 0.059359:ACO_AWT(81), 0.090688:CO_AWT(255), 0.098848:AWT(255), (...) 1.666296:CO_JIS(255), (...) 1.919523:JIS(0)
        a[14] /* CUSTOM->CUSTOM_P */ = JIS; // 0.017811:JIS(0), 0.06394:ACO_JIS(0), 0.074126:ACOP_JIS(0), (...) 0.085322:ACO_AWT(0), (...) 0.15655:AWT(0)
    }
    
    private static void populateArrForSrc_RGB(byte[] a) {
        a[16] /* RGB->CUSTOM */ = JIS; // 0.020877:JIS(0), 0.024181:ACO_JIS(0), 0.025735:ACOP_JIS(0), (...) 0.090195:ACO_AWT(0), (...) 0.135546:AWT(0)
        a[17] /* RGB->RGB */ = AWT; // 0.002042:AWT(0), 0.003747:ACO_AWT(0), 0.017837:ACOP_AWT(0)
        a[18] /* RGB->ARGB */ = AWT; // 0.002311:AWT(0), 0.005893:ACOP_AWT(0)
        a[19] /* RGB->ARGB_P */ = AWT; // 0.003399:AWT(0), 0.00518:ACO_AWT(0)
        a[20] /* RGB->BGR */ = AWT; // 0.003486:AWT(0), 0.005748:ACO_AWT(0), 0.016948:ACOP_AWT(0)
        a[21] /* RGB->B_BGR */ = AWT; // 0.003415:AWT(0), 0.005626:ACO_AWT(0), 0.016781:ACOP_AWT(0)
        a[22] /* RGB->B_ABGR */ = AWT; // 0.004364:AWT(0), 0.006608:ACO_AWT(0), 0.01698:ACOP_AWT(0)
        a[23] /* RGB->B_ABGR_P */ = AWT; // 0.004409:AWT(0), 0.007127:ACO_AWT(0), 0.016915:ACOP_AWT(0)
        a[24] /* RGB->S_6_RGB */ = AWT; // 0.003944:AWT(0), 0.006196:ACO_AWT(0), 0.019127:ACOP_AWT(0)
        a[25] /* RGB->S_5_RGB */ = AWT; // 0.003927:AWT(0), 0.00613:ACO_AWT(0), 0.018385:ACOP_AWT(0)
        a[26] /* RGB->B_GRAY */ = AWT; // 0.006065:AWT(1), 0.008285:ACO_AWT(1), 0.019266:ACOP_AWT(1)
        a[27] /* RGB->S_GRAY */ = AWT; // 0.006124:AWT(1), 0.008178:BW_AWT(1), 0.008357:ACO_AWT(1)
        a[28] /* RGB->B_BIN */ = BW_ACO_AWT; // 0.00872:ACO_AWT(53), 0.015806:BW_ACO_AWT(0), 0.018151:ACO_BW_ACO_AWT(0), (...) 0.022886:AWT(53)
        a[29] /* RGB->B_IND */ = AWT; // 0.033329:AWT(81), 0.036155:ACO_AWT(81), 0.053385:ACOP_AWT(81)
        a[30] /* RGB->CUSTOM_P */ = JIS; // 0.022654:JIS(0), 0.024894:ACO_JIS(0), 0.025323:ACOP_JIS(0), (...) 0.058104:ACO_AWT(0), (...) 0.108885:AWT(0)
    }
    
    private static void populateArrForSrc_ARGB(byte[] a) {
        a[32] /* ARGB->CUSTOM */ = JIS; // 0.022252:JIS(0), 0.049786:ACOP_JIS(255), 0.08689:AWT(0)
        a[33] /* ARGB->RGB */ = AWT; // 0.001735:AWT(0), 0.035584:ACOP_AWT(255)
        a[34] /* ARGB->ARGB */ = AWT; // 0.001697:AWT(0), 0.023415:ACOP_AWT(255)
        a[35] /* ARGB->ARGB_P */ = AWT; // 0.011318:AWT(0)
        a[36] /* ARGB->BGR */ = AWT; // 0.003557:AWT(0), 0.004855:CO_AWT(0), 0.035332:ACOP_AWT(255)
        a[37] /* ARGB->B_BGR */ = AWT; // 0.003507:AWT(0), 0.004779:CO_AWT(0), 0.034976:ACOP_AWT(255)
        a[38] /* ARGB->B_ABGR */ = AWT; // 0.004405:AWT(0), 0.033824:ACOP_AWT(255)
        a[39] /* ARGB->B_ABGR_P */ = AWT; // 0.009226:AWT(0), 0.02448:ACOP_AWT(0)
        a[40] /* ARGB->S_6_RGB */ = AWT; // 0.003944:AWT(0), 0.005301:CO_AWT(0), 0.037169:ACOP_AWT(255)
        a[41] /* ARGB->S_5_RGB */ = AWT; // 0.003916:AWT(0), 0.005287:CO_AWT(0), 0.036329:ACOP_AWT(255)
        a[42] /* ARGB->B_GRAY */ = AWT; // 0.00598:AWT(1), 0.007417:CO_AWT(1), 0.03633:ACOP_AWT(255)
        a[43] /* ARGB->S_GRAY */ = AWT; // 0.006263:AWT(1), 0.007564:CO_AWT(1), 0.008096:BW_AWT(1)
        a[44] /* ARGB->B_BIN */ = BW_ACO_AWT; // 0.006441:AWT(53), 0.015638:BW_ACO_AWT(0), 0.016959:CO_BW_ACO_AWT(0)
        a[45] /* ARGB->B_IND */ = AWT; // 0.033574:AWT(81), 0.034953:CO_AWT(81), 0.073735:ACOP_AWT(255)
        a[46] /* ARGB->CUSTOM_P */ = JIS; // 0.032636:ACOP_JIS(0), 0.035847:JIS(0), 0.055192:AWT(0)
    }
    
    private static void populateArrForSrc_ARGB_P(byte[] a) {
        a[48] /* ARGB_P->CUSTOM */ = ACO_JIS; // 0.034139:ACO_JIS(1), 0.044688:JIS(0), 0.101034:ACO_AWT(1), (...) 0.156413:AWT(1)
        a[49] /* ARGB_P->RGB */ = ACO_AWT; // 0.013419:ACO_AWT(1), 0.024382:AWT(1)
        a[50] /* ARGB_P->ARGB */ = AWT; // 0.012167:AWT(1)
        a[51] /* ARGB_P->ARGB_P */ = AWT; // 0.001722:AWT(0), 0.023388:ACO_AWT(0)
        a[52] /* ARGB_P->BGR */ = ACO_AWT; // 0.015627:ACO_AWT(1), 0.02415:AWT(1), 0.027692:CO_AWT(1)
        a[53] /* ARGB_P->B_BGR */ = ACO_AWT; // 0.015574:ACO_AWT(1), 0.024259:AWT(1), 0.027635:CO_AWT(1)
        a[54] /* ARGB_P->B_ABGR */ = ACO_AWT; // 0.016741:ACO_AWT(1), 0.022911:AWT(1)
        a[55] /* ARGB_P->B_ABGR_P */ = AWT; // 0.013923:AWT(0), 0.021967:ACO_AWT(0)
        a[56] /* ARGB_P->S_6_RGB */ = ACO_AWT; // 0.016408:ACO_AWT(9), 0.026509:AWT(9), 0.02875:CO_AWT(9)
        a[57] /* ARGB_P->S_5_RGB */ = ACO_AWT; // 0.016375:ACO_AWT(9), 0.025708:AWT(9), 0.028747:CO_AWT(9)
        a[58] /* ARGB_P->B_GRAY */ = ACO_AWT; // 0.018469:ACO_AWT(2), 0.02465:AWT(105), 0.030886:CO_AWT(2)
        a[59] /* ARGB_P->S_GRAY */ = ACO_AWT; // 0.018579:ACO_AWT(2), 0.026771:BW_AWT(105), 0.028222:AWT(1)
        a[60] /* ARGB_P->B_BIN */ = ACO_BW_ACO_AWT; // 0.019092:ACO_AWT(48), 0.028081:ACO_BW_ACO_AWT(0), 0.033928:BW_ACO_AWT(3), (...) 0.050702:AWT(48)
        a[61] /* ARGB_P->B_IND */ = ACO_AWT; // 0.046722:ACO_AWT(81), 0.058924:CO_AWT(81), 0.062242:AWT(81)
        a[62] /* ARGB_P->CUSTOM_P */ = JIS; // 0.021966:JIS(0), 0.046916:ACO_JIS(0), 0.067305:ACO_AWT(0), (...) 0.136245:AWT(0)
    }
    
    private static void populateArrForSrc_BGR(byte[] a) {
        a[64] /* BGR->CUSTOM */ = JIS; // 0.02234:JIS(0), 0.02455:CO_JIS(0), 0.026238:ACO_JIS(0), (...) 0.09273:ACO_AWT(0), (...) 0.130498:AWT(0)
        a[65] /* BGR->RGB */ = AWT; // 0.003633:AWT(0), 0.004913:ACO_AWT(0), 0.031487:ACOP_AWT(0)
        a[66] /* BGR->ARGB */ = AWT; // 0.003756:AWT(0), 0.005744:CO_AWT(0), 0.020215:ACOP_AWT(0)
        a[67] /* BGR->ARGB_P */ = ACO_AWT; // 0.00666:ACO_AWT(0), 0.006906:CO_AWT(0), 0.017618:AWT(0)
        a[68] /* BGR->BGR */ = AWT; // 0.001689:AWT(0), 0.00694:CO_AWT(0), 0.007177:ACO_AWT(0)
        a[69] /* BGR->B_BGR */ = CO_AWT; // 0.00682:CO_AWT(0), 0.007133:ACO_AWT(0), 0.018713:AWT(0)
        a[70] /* BGR->B_ABGR */ = CO_AWT; // 0.007851:CO_AWT(0), 0.008093:ACO_AWT(0), 0.018648:AWT(0)
        a[71] /* BGR->B_ABGR_P */ = CO_AWT; // 0.007747:CO_AWT(0), 0.008646:ACO_AWT(0), 0.016962:AWT(0)
        a[72] /* BGR->S_6_RGB */ = CO_AWT; // 0.007257:CO_AWT(0), 0.007485:ACO_AWT(0), 0.018539:AWT(0)
        a[73] /* BGR->S_5_RGB */ = CO_AWT; // 0.007241:CO_AWT(0), 0.007499:ACO_AWT(0), 0.018417:AWT(0)
        a[74] /* BGR->B_GRAY */ = CO_AWT; // 0.009343:CO_AWT(1), 0.009535:ACO_AWT(1), 0.018596:AWT(1)
        a[75] /* BGR->S_GRAY */ = CO_AWT; // 0.009439:CO_AWT(1), 0.009666:ACO_AWT(1), 0.020272:AWT(1)
        a[76] /* BGR->B_BIN */ = CO_BW_ACO_AWT; // 0.009982:ACO_AWT(53), 0.018604:CO_BW_ACO_AWT(0), 0.018851:ACO_BW_ACO_AWT(0), (...) 0.024289:AWT(53)
        a[77] /* BGR->B_IND */ = CO_AWT; // 0.037263:CO_AWT(81), 0.037423:ACO_AWT(81), 0.053631:AWT(81)
        a[78] /* BGR->CUSTOM_P */ = JIS; // 0.023244:JIS(0), 0.026075:CO_JIS(0), 0.026425:ACO_JIS(0), (...) 0.061007:ACO_AWT(0), (...) 0.112943:AWT(0)
    }
    
    private static void populateArrForSrc_B_BGR(byte[] a) {
        a[80] /* B_BGR->CUSTOM */ = CO_JIS; // 0.023391:CO_JIS(0), 0.025047:ACO_JIS(0), 0.026336:ACOP_JIS(0), (...) 0.090153:ACO_AWT(0), (...) 0.104849:JIS(0), (...) 0.131467:AWT(0)
        a[81] /* B_BGR->RGB */ = AWT; // 0.003007:AWT(0), 0.004459:ACO_AWT(0), 0.018393:ACOP_AWT(0)
        a[82] /* B_BGR->ARGB */ = AWT; // 0.003321:AWT(0), 0.005337:CO_AWT(0), 0.006615:ACOP_AWT(0)
        a[83] /* B_BGR->ARGB_P */ = AWT; // 0.004082:AWT(0), 0.00616:ACO_AWT(0), 0.006344:CO_AWT(0)
        a[84] /* B_BGR->BGR */ = AWT; // 0.003162:AWT(0), 0.006375:CO_AWT(0), 0.006668:ACO_AWT(0)
        a[85] /* B_BGR->B_BGR */ = AWT; // 0.001192:AWT(0), 0.006303:CO_AWT(0), 0.006568:ACO_AWT(0)
        a[86] /* B_BGR->B_ABGR */ = AWT; // 0.004313:AWT(0), 0.007376:CO_AWT(0), 0.007581:ACO_AWT(0)
        a[87] /* B_BGR->B_ABGR_P */ = AWT; // 0.004256:AWT(0), 0.007333:CO_AWT(0), 0.008072:ACO_AWT(0)
        a[88] /* B_BGR->S_6_RGB */ = AWT; // 0.004043:AWT(0), 0.007017:CO_AWT(0), 0.007302:ACO_AWT(0)
        a[89] /* B_BGR->S_5_RGB */ = AWT; // 0.004026:AWT(0), 0.007024:CO_AWT(0), 0.007272:ACO_AWT(0)
        a[90] /* B_BGR->B_GRAY */ = AWT; // 0.004733:AWT(1), 0.009041:CO_AWT(1), 0.009371:ACO_AWT(1)
        a[91] /* B_BGR->S_GRAY */ = AWT; // 0.0048:AWT(1), 0.006971:BW_AWT(1), 0.009248:CO_AWT(1)
        a[92] /* B_BGR->B_BIN */ = BW_ACO_AWT; // 0.009877:ACO_AWT(53), 0.014018:BW_ACO_AWT(0), 0.018694:ACO_BW_ACO_AWT(0), (...) 0.024414:AWT(53)
        a[93] /* B_BGR->B_IND */ = AWT; // 0.032862:AWT(81), 0.036518:CO_AWT(81), 0.036706:ACO_AWT(81)
        a[94] /* B_BGR->CUSTOM_P */ = CO_JIS; // 0.025312:CO_JIS(0), 0.025803:ACO_JIS(0), 0.02607:ACOP_JIS(0), (...) 0.058575:ACO_AWT(0), (...) 0.105834:JIS(0), (...) 0.108902:AWT(0)
    }
    
    private static void populateArrForSrc_B_ABGR(byte[] a) {
        a[96] /* B_ABGR->CUSTOM */ = ACO_JIS; // 0.026169:ACO_JIS(0), 0.068426:ACOP_JIS(255), 0.093009:ACO_AWT(0), (...) 0.12273:JIS(0), (...) 0.148807:AWT(255)
        a[97] /* B_ABGR->RGB */ = ACO_AWT; // 0.004824:ACO_AWT(0), 0.034802:AWT(255), 0.053592:ACOP_AWT(255)
        a[98] /* B_ABGR->ARGB */ = AWT; // 0.003872:AWT(0), 0.041215:ACOP_AWT(255)
        a[99] /* B_ABGR->ARGB_P */ = ACO_AWT; // 0.014908:ACO_AWT(0), 0.028631:AWT(0)
        a[100] /* B_ABGR->BGR */ = ACO_AWT; // 0.007224:ACO_AWT(0), 0.035048:AWT(255), 0.038184:CO_AWT(255)
        a[101] /* B_ABGR->B_BGR */ = ACO_AWT; // 0.007081:ACO_AWT(0), 0.034587:AWT(255), 0.03826:CO_AWT(255)
        a[102] /* B_ABGR->B_ABGR */ = AWT; // 0.001699:AWT(0), 0.00808:ACO_AWT(0), 0.052236:ACOP_AWT(255)
        a[103] /* B_ABGR->B_ABGR_P */ = ACO_AWT; // 0.013135:ACO_AWT(0), 0.027926:AWT(0), 0.042458:ACOP_AWT(0)
        a[104] /* B_ABGR->S_6_RGB */ = ACO_AWT; // 0.007385:ACO_AWT(0), 0.035538:AWT(255), 0.037954:CO_AWT(255)
        a[105] /* B_ABGR->S_5_RGB */ = ACO_AWT; // 0.00743:ACO_AWT(0), 0.035326:AWT(255), 0.037656:CO_AWT(255)
        a[106] /* B_ABGR->B_GRAY */ = ACO_AWT; // 0.009529:ACO_AWT(1), 0.031578:AWT(255), 0.039797:CO_AWT(255)
        a[107] /* B_ABGR->S_GRAY */ = ACO_AWT; // 0.009598:ACO_AWT(1), 0.033218:AWT(255), 0.033281:BW_AWT(255)
        a[108] /* B_ABGR->B_BIN */ = ACO_BW_ACO_AWT; // 0.00994:ACO_AWT(53), 0.018914:ACO_BW_ACO_AWT(0), 0.033284:ACO_BW_AWT(0), (...) 0.042105:AWT(61)
        a[109] /* B_ABGR->B_IND */ = ACO_AWT; // 0.037098:ACO_AWT(81), 0.069537:CO_AWT(255), 0.078444:AWT(255)
        a[110] /* B_ABGR->CUSTOM_P */ = ACO_JIS; // 0.038439:ACO_JIS(0), 0.049687:ACOP_JIS(0), 0.059047:ACO_AWT(0), (...) 0.133492:AWT(0), (...) 0.135117:JIS(0)
    }
    
    private static void populateArrForSrc_B_ABGR_P(byte[] a) {
        a[112] /* B_ABGR_P->CUSTOM */ = ACO_JIS; // 0.032779:ACO_JIS(1), 0.074331:ACOP_JIS(1), 0.098383:ACO_AWT(1), (...) 0.152714:JIS(0), (...) 0.155401:AWT(1)
        a[113] /* B_ABGR_P->RGB */ = ACO_AWT; // 0.011636:ACO_AWT(1), 0.040914:AWT(1), 0.059457:ACOP_AWT(1)
        a[114] /* B_ABGR_P->ARGB */ = AWT; // 0.010362:AWT(1), 0.047206:ACOP_AWT(1)
        a[115] /* B_ABGR_P->ARGB_P */ = ACO_AWT; // 0.02126:ACO_AWT(0), 0.034835:AWT(0)
        a[116] /* B_ABGR_P->BGR */ = ACO_AWT; // 0.014073:ACO_AWT(1), 0.041502:AWT(1), 0.045202:CO_AWT(1)
        a[117] /* B_ABGR_P->B_BGR */ = ACO_AWT; // 0.013999:ACO_AWT(1), 0.041161:AWT(1), 0.044747:CO_AWT(1)
        a[118] /* B_ABGR_P->B_ABGR */ = ACO_AWT; // 0.014862:ACO_AWT(1), 0.041407:AWT(1), 0.059187:ACOP_AWT(1)
        a[119] /* B_ABGR_P->B_ABGR_P */ = AWT; // 0.001709:AWT(0), 0.020069:ACO_AWT(0), 0.048994:ACOP_AWT(0)
        a[120] /* B_ABGR_P->S_6_RGB */ = ACO_AWT; // 0.014455:ACO_AWT(9), 0.04267:AWT(9), 0.045161:CO_AWT(9)
        a[121] /* B_ABGR_P->S_5_RGB */ = ACO_AWT; // 0.014469:ACO_AWT(9), 0.042587:AWT(9), 0.045299:CO_AWT(9)
        a[122] /* B_ABGR_P->B_GRAY */ = ACO_AWT; // 0.016326:ACO_AWT(2), 0.037966:AWT(105), 0.046948:CO_AWT(2)
        a[123] /* B_ABGR_P->S_GRAY */ = ACO_AWT; // 0.016437:ACO_AWT(2), 0.040203:AWT(2), 0.0404:BW_AWT(105)
        a[124] /* B_ABGR_P->B_BIN */ = ACO_BW_ACO_AWT; // 0.016748:ACO_AWT(48), 0.025833:ACO_BW_ACO_AWT(0), 0.040166:ACO_BW_AWT(0), (...) 0.048027:AWT(48)
        a[125] /* B_ABGR_P->B_IND */ = ACO_AWT; // 0.04522:ACO_AWT(81), 0.076016:CO_AWT(81), 0.084661:AWT(81)
        a[126] /* B_ABGR_P->CUSTOM_P */ = ACO_JIS; // 0.044973:ACO_JIS(0), 0.05635:ACOP_JIS(0), 0.065922:ACO_AWT(0), (...) 0.134825:AWT(0), (...) 0.182063:JIS(0)
    }
    
    private static void populateArrForSrc_S_6_RGB(byte[] a) {
        a[128] /* S_6_RGB->CUSTOM */ = JIS; // 0.019114:JIS(0), 0.02847:ACO_JIS(0), 0.040507:CO_JIS(0), (...) 0.093461:ACO_AWT(0), (...) 0.133495:AWT(0)
        a[129] /* S_6_RGB->RGB */ = ACO_AWT; // 0.007647:ACO_AWT(0), 0.01988:AWT(0), 0.03435:ACOP_AWT(0)
        a[130] /* S_6_RGB->ARGB */ = AWT; // 0.006361:AWT(0), 0.022141:CO_AWT(0), 0.022396:ACOP_AWT(0)
        a[131] /* S_6_RGB->ARGB_P */ = ACO_AWT; // 0.009292:ACO_AWT(0), 0.019811:AWT(0), 0.023127:CO_AWT(0)
        a[132] /* S_6_RGB->BGR */ = ACO_AWT; // 0.009791:ACO_AWT(0), 0.019868:AWT(0), 0.023196:CO_AWT(0)
        a[133] /* S_6_RGB->B_BGR */ = ACO_AWT; // 0.009867:ACO_AWT(0), 0.020807:AWT(0), 0.023657:CO_AWT(0)
        a[134] /* S_6_RGB->B_ABGR */ = ACO_AWT; // 0.010816:ACO_AWT(0), 0.021141:AWT(0), 0.024639:CO_AWT(0)
        a[135] /* S_6_RGB->B_ABGR_P */ = ACO_AWT; // 0.011262:ACO_AWT(0), 0.020234:AWT(0), 0.024699:CO_AWT(0)
        a[136] /* S_6_RGB->S_6_RGB */ = AWT; // 0.000508:AWT(0), 0.010444:ACO_AWT(0), 0.024229:CO_AWT(0)
        a[137] /* S_6_RGB->S_5_RGB */ = ACO_AWT; // 0.010502:ACO_AWT(0), 0.021524:AWT(0), 0.024306:CO_AWT(0)
        a[138] /* S_6_RGB->B_GRAY */ = ACO_AWT; // 0.012499:ACO_AWT(1), 0.021747:AWT(1), 0.026381:CO_AWT(1)
        a[139] /* S_6_RGB->S_GRAY */ = ACO_AWT; // 0.012627:ACO_AWT(1), 0.02337:AWT(1), 0.023842:BW_AWT(1)
        a[140] /* S_6_RGB->B_BIN */ = ACO_BW_ACO_AWT; // 0.012674:ACO_AWT(53), 0.021744:ACO_BW_ACO_AWT(0), 0.026915:AWT(53)
        a[141] /* S_6_RGB->B_IND */ = ACO_AWT; // 0.042024:ACO_AWT(81), 0.056542:CO_AWT(81), 0.057271:AWT(81)
        a[142] /* S_6_RGB->CUSTOM_P */ = JIS; // 0.02117:JIS(0), 0.029797:ACO_JIS(0), 0.042981:ACOP_JIS(0), (...) 0.064936:ACO_AWT(0), (...) 0.118384:AWT(0)
    }
    
    private static void populateArrForSrc_S_5_RGB(byte[] a) {
        a[144] /* S_5_RGB->CUSTOM */ = JIS; // 0.019488:JIS(0), 0.028961:ACO_JIS(0), 0.042307:CO_JIS(0), (...) 0.096719:ACO_AWT(0), (...) 0.140509:AWT(0)
        a[145] /* S_5_RGB->RGB */ = ACO_AWT; // 0.008166:ACO_AWT(0), 0.020418:AWT(0), 0.034885:ACOP_AWT(0)
        a[146] /* S_5_RGB->ARGB */ = AWT; // 0.006937:AWT(0), 0.022723:CO_AWT(0), 0.022929:ACOP_AWT(0)
        a[147] /* S_5_RGB->ARGB_P */ = ACO_AWT; // 0.00987:ACO_AWT(0), 0.020358:AWT(0), 0.023709:CO_AWT(0)
        a[148] /* S_5_RGB->BGR */ = ACO_AWT; // 0.010342:ACO_AWT(0), 0.020356:AWT(0), 0.023759:CO_AWT(0)
        a[149] /* S_5_RGB->B_BGR */ = ACO_AWT; // 0.010261:ACO_AWT(0), 0.021808:AWT(0), 0.023574:CO_AWT(0)
        a[150] /* S_5_RGB->B_ABGR */ = ACO_AWT; // 0.011189:ACO_AWT(0), 0.021358:AWT(0), 0.02468:CO_AWT(0)
        a[151] /* S_5_RGB->B_ABGR_P */ = ACO_AWT; // 0.011759:ACO_AWT(0), 0.020316:AWT(0), 0.024707:CO_AWT(0)
        a[152] /* S_5_RGB->S_6_RGB */ = ACO_AWT; // 0.010756:ACO_AWT(0), 0.02183:AWT(0), 0.024136:CO_AWT(0)
        a[153] /* S_5_RGB->S_5_RGB */ = AWT; // 0.000504:AWT(0), 0.010963:ACO_AWT(0), 0.024778:CO_AWT(0)
        a[154] /* S_5_RGB->B_GRAY */ = ACO_AWT; // 0.013048:ACO_AWT(1), 0.022232:AWT(1), 0.026918:CO_AWT(1)
        a[155] /* S_5_RGB->S_GRAY */ = ACO_AWT; // 0.013151:ACO_AWT(1), 0.023875:AWT(1), 0.024326:BW_AWT(1)
        a[156] /* S_5_RGB->B_BIN */ = ACO_BW_ACO_AWT; // 0.013392:ACO_AWT(53), 0.022634:ACO_BW_ACO_AWT(0), 0.027877:AWT(53)
        a[157] /* S_5_RGB->B_IND */ = ACO_AWT; // 0.041995:ACO_AWT(81), 0.05519:CO_AWT(81), 0.057141:AWT(81)
        a[158] /* S_5_RGB->CUSTOM_P */ = JIS; // 0.019949:JIS(0), 0.029522:ACO_JIS(0), 0.042527:ACOP_JIS(0), (...) 0.062576:ACO_AWT(0), (...) 0.11327:AWT(0)
    }
    
    private static void populateArrForSrc_B_GRAY(byte[] a) {
        a[160] /* B_GRAY->CUSTOM */ = JIS; // 0.014405:JIS(0), 0.023954:CO_JIS(0), 0.02556:ACO_JIS(0), (...) 0.092666:ACO_AWT(0), (...) 0.131227:AWT(0)
        a[161] /* B_GRAY->RGB */ = AWT; // 0.00298:AWT(0), 0.004266:ACO_AWT(0), 0.019163:ACOP_AWT(0)
        a[162] /* B_GRAY->ARGB */ = AWT; // 0.003183:AWT(0), 0.005219:CO_AWT(0), 0.006909:ACOP_AWT(0)
        a[163] /* B_GRAY->ARGB_P */ = AWT; // 0.004311:AWT(0), 0.006049:ACO_AWT(0), 0.006238:CO_AWT(0)
        a[164] /* B_GRAY->BGR */ = AWT; // 0.002986:AWT(0), 0.006353:CO_AWT(0), 0.006582:ACO_AWT(0)
        a[165] /* B_GRAY->B_BGR */ = AWT; // 0.003087:AWT(0), 0.00614:CO_AWT(0), 0.006483:ACO_AWT(0)
        a[166] /* B_GRAY->B_ABGR */ = AWT; // 0.004237:AWT(0), 0.007244:CO_AWT(0), 0.00748:ACO_AWT(0)
        a[167] /* B_GRAY->B_ABGR_P */ = AWT; // 0.004242:AWT(0), 0.007255:CO_AWT(0), 0.00785:ACO_AWT(0)
        a[168] /* B_GRAY->S_6_RGB */ = AWT; // 0.003696:AWT(0), 0.006625:CO_AWT(0), 0.00686:ACO_AWT(0)
        a[169] /* B_GRAY->S_5_RGB */ = AWT; // 0.0037:AWT(0), 0.006635:CO_AWT(0), 0.006895:ACO_AWT(0)
        a[170] /* B_GRAY->B_GRAY */ = AWT; // 0.000142:AWT(0), 0.008826:CO_AWT(0), 0.00906:ACO_AWT(0)
        a[171] /* B_GRAY->S_GRAY */ = AWT; // 0.002035:AWT(0), 0.008895:CO_AWT(0), 0.00907:ACO_AWT(0)
        a[172] /* B_GRAY->B_BIN */ = ACO_AWT; // 0.009432:ACO_AWT(0), 0.018108:CO_BW_ACO_AWT(0), 0.018298:ACO_BW_ACO_AWT(0), (...) 0.023888:AWT(0)
        a[173] /* B_GRAY->B_IND */ = AWT; // 0.011577:AWT(51), 0.015671:CO_AWT(51), 0.015911:ACO_AWT(51)
        a[174] /* B_GRAY->CUSTOM_P */ = JIS; // 0.015483:JIS(0), 0.025427:CO_JIS(0), 0.026336:ACOP_JIS(0), (...) 0.061055:ACO_AWT(0), (...) 0.112867:AWT(0)
    }
    
    private static void populateArrForSrc_S_GRAY(byte[] a) {
        a[176] /* S_GRAY->CUSTOM */ = JIS; // 0.017101:BW_JIS(0), 0.018213:JIS(0), 0.025326:ACO_JIS(0), (...) 0.092931:ACO_AWT(0), (...) 0.138081:AWT(0)
        a[177] /* S_GRAY->RGB */ = ACO_AWT; // 0.004348:ACO_AWT(0), 0.005133:BW_AWT(0), 0.017211:AWT(0)
        a[178] /* S_GRAY->ARGB */ = AWT; // 0.00317:AWT(0), 0.00537:BW_AWT(0), 0.018826:CO_AWT(0)
        a[179] /* S_GRAY->ARGB_P */ = BW_AWT; // 0.006019:ACO_AWT(0), 0.006445:BW_AWT(0), 0.016613:AWT(0)
        a[180] /* S_GRAY->BGR */ = BW_AWT; // 0.005188:BW_AWT(0), 0.006485:ACO_AWT(0), 0.016638:AWT(0)
        a[181] /* S_GRAY->B_BGR */ = BW_AWT; // 0.005382:BW_AWT(0), 0.006576:ACO_AWT(0), 0.017414:AWT(0)
        a[182] /* S_GRAY->B_ABGR */ = BW_AWT; // 0.006531:BW_AWT(0), 0.007417:ACO_AWT(0), 0.017962:AWT(0)
        a[183] /* S_GRAY->B_ABGR_P */ = BW_AWT; // 0.00648:BW_AWT(0), 0.007846:ACO_AWT(0), 0.016586:AWT(0)
        a[184] /* S_GRAY->S_6_RGB */ = BW_AWT; // 0.005866:BW_AWT(0), 0.006878:ACO_AWT(0), 0.017863:AWT(0)
        a[185] /* S_GRAY->S_5_RGB */ = BW_AWT; // 0.00601:BW_AWT(0), 0.007108:ACO_AWT(0), 0.017787:AWT(0)
        a[186] /* S_GRAY->B_GRAY */ = AWT; // 0.002066:AWT(0), 0.009109:ACO_AWT(0), 0.022612:CO_AWT(0)
        a[187] /* S_GRAY->S_GRAY */ = AWT; // 0.000523:AWT(0), 0.004294:BW_AWT(0), 0.009263:ACO_AWT(0)
        a[188] /* S_GRAY->B_BIN */ = ACO_AWT; // 0.00966:ACO_AWT(0), 0.011654:BW_ACO_AWT(0), 0.018727:ACO_BW_ACO_AWT(0), (...) 0.024469:AWT(0)
        a[189] /* S_GRAY->B_IND */ = BW_AWT; // 0.013753:BW_AWT(51), 0.015685:ACO_AWT(51), 0.02701:AWT(51)
        a[190] /* S_GRAY->CUSTOM_P */ = JIS; // 0.017504:BW_JIS(0), 0.018378:JIS(0), 0.025346:ACO_JIS(0), (...) 0.057989:ACO_AWT(0), (...) 0.115204:AWT(0)
    }
    
    private static void populateArrForSrc_B_BIN(byte[] a) {
        a[192] /* B_BIN->CUSTOM */ = ACO_JIS; // 0.026227:ACO_JIS(0), 0.033993:BW_JIS(0), 0.038596:CO_JIS(0), (...) 0.065341:JIS(0), (...) 0.092965:ACO_AWT(0), (...) 0.135581:AWT(0)
        a[193] /* B_BIN->RGB */ = ACO_AWT; // 0.005071:ACO_AWT(0), 0.018012:AWT(0), 0.022122:BW_AWT(0)
        a[194] /* B_BIN->ARGB */ = AWT; // 0.004111:AWT(0), 0.020091:CO_AWT(0), 0.020449:ACOP_AWT(0)
        a[195] /* B_BIN->ARGB_P */ = ACO_AWT; // 0.006975:ACO_AWT(0), 0.018075:AWT(0), 0.021393:CO_AWT(0)
        a[196] /* B_BIN->BGR */ = ACO_AWT; // 0.00754:ACO_AWT(0), 0.018054:AWT(0), 0.02129:CO_AWT(0)
        a[197] /* B_BIN->B_BGR */ = ACO_AWT; // 0.007448:ACO_AWT(0), 0.018997:AWT(0), 0.02125:CO_AWT(0)
        a[198] /* B_BIN->B_ABGR */ = ACO_AWT; // 0.008344:ACO_AWT(0), 0.018861:AWT(0), 0.022198:CO_AWT(0)
        a[199] /* B_BIN->B_ABGR_P */ = ACO_AWT; // 0.008771:ACO_AWT(0), 0.017458:AWT(0), 0.021646:CO_AWT(0)
        a[200] /* B_BIN->S_6_RGB */ = ACO_AWT; // 0.007893:ACO_AWT(0), 0.018931:AWT(0), 0.021181:CO_AWT(0)
        a[201] /* B_BIN->S_5_RGB */ = ACO_AWT; // 0.007903:ACO_AWT(0), 0.019616:AWT(0), 0.02122:CO_AWT(0)
        a[202] /* B_BIN->B_GRAY */ = ACO_AWT; // 0.009987:ACO_AWT(0), 0.018884:AWT(0), 0.023295:CO_AWT(0)
        a[203] /* B_BIN->S_GRAY */ = ACO_AWT; // 0.010092:ACO_AWT(0), 0.02054:AWT(0), 0.020925:BW_AWT(0)
        a[204] /* B_BIN->B_BIN */ = AWT; // 0.008426:AWT(0), 0.010614:ACO_AWT(0), 0.01958:ACO_BW_ACO_AWT(0)
        a[205] /* B_BIN->B_IND */ = ACO_AWT; // 0.030388:ACO_AWT(18), 0.041809:AWT(18), 0.043726:CO_AWT(18)
        a[206] /* B_BIN->CUSTOM_P */ = ACO_JIS; // 0.026319:ACO_JIS(0), 0.034175:BW_JIS(0), 0.039247:ACOP_JIS(0), (...) 0.059252:ACO_AWT(0), (...) 0.064617:JIS(0), (...) 0.110281:AWT(0)
    }
    
    private static void populateArrForSrc_B_IND(byte[] a) {
        a[208] /* B_IND->CUSTOM */ = CO_JIS; // 0.022169:CO_JIS(0), 0.023535:ACO_JIS(0), 0.025498:ACOP_JIS(0), (...) 0.066257:JIS(0), (...) 0.089129:ACO_AWT(0), (...) 0.13078:AWT(0)
        a[209] /* B_IND->RGB */ = AWT; // 0.001904:AWT(0), 0.002967:ACO_AWT(0), 0.017499:ACOP_AWT(0)
        a[210] /* B_IND->ARGB */ = AWT; // 0.001907:AWT(0), 0.004104:CO_AWT(0), 0.005609:ACOP_AWT(0)
        a[211] /* B_IND->ARGB_P */ = AWT; // 0.003165:AWT(0), 0.004797:ACO_AWT(0), 0.00522:CO_AWT(0)
        a[212] /* B_IND->BGR */ = AWT; // 0.002041:AWT(0), 0.005319:ACO_AWT(0), 0.005334:CO_AWT(0)
        a[213] /* B_IND->B_BGR */ = AWT; // 0.003293:AWT(0), 0.005171:CO_AWT(0), 0.005182:ACO_AWT(0)
        a[214] /* B_IND->B_ABGR */ = AWT; // 0.004225:AWT(0), 0.006134:ACO_AWT(0), 0.006146:CO_AWT(0)
        a[215] /* B_IND->B_ABGR_P */ = AWT; // 0.004733:AWT(0), 0.006162:CO_AWT(0), 0.006719:ACO_AWT(0)
        a[216] /* B_IND->S_6_RGB */ = AWT; // 0.001777:AWT(0), 0.005702:ACO_AWT(0), 0.005726:CO_AWT(0)
        a[217] /* B_IND->S_5_RGB */ = AWT; // 0.001744:AWT(0), 0.005665:CO_AWT(0), 0.005793:ACO_AWT(0)
        a[218] /* B_IND->B_GRAY */ = AWT; // 0.001761:AWT(1), 0.007876:CO_AWT(1), 0.007881:ACO_AWT(1)
        a[219] /* B_IND->S_GRAY */ = AWT; // 0.001807:AWT(1), 0.004079:BW_AWT(1), 0.007974:ACO_AWT(1)
        a[220] /* B_IND->B_BIN */ = BW_ACO_AWT; // 0.008153:ACO_AWT(51), 0.01129:BW_ACO_AWT(0), 0.016983:CO_BW_ACO_AWT(0), (...) 0.022436:AWT(51)
        a[221] /* B_IND->B_IND */ = AWT; // 0.000146:AWT(0), 0.036934:ACO_AWT(51), 0.036936:CO_AWT(51)
        a[222] /* B_IND->CUSTOM_P */ = CO_JIS; // 0.024168:CO_JIS(0), 0.024883:ACO_JIS(0), 0.025403:ACOP_JIS(0), (...) 0.059307:ACO_AWT(0), (...) 0.068103:JIS(0), (...) 0.106888:AWT(0)
    }
    
    private static void populateArrForSrc_CUSTOM_P(byte[] a) {
        a[224] /* CUSTOM_P->CUSTOM */ = JIS; // 0.020419:JIS(0), 0.061008:ACO_JIS(1), 0.102953:ACOP_JIS(0), (...) 0.127754:ACO_AWT(1), (...) 0.182994:AWT(1)
        a[225] /* CUSTOM_P->RGB */ = JIS; // 0.039646:ACO_AWT(1), 0.040355:JIS(0), 0.060591:ACO_JIS(1), (...) 0.070125:AWT(1)
        a[226] /* CUSTOM_P->ARGB */ = JIS; // 0.038099:AWT(1), 0.040726:JIS(0), 0.076185:ACOP_AWT(1)
        a[227] /* CUSTOM_P->ARGB_P */ = JIS; // 0.022519:JIS(0), 0.04816:ACO_AWT(0), 0.05704:ACO_JIS(0), (...) 0.062044:AWT(0)
        a[228] /* CUSTOM_P->BGR */ = JIS; // 0.040857:ACO_AWT(1), 0.043239:JIS(0), 0.059025:ACO_JIS(1), (...) 0.07154:AWT(1)
        a[229] /* CUSTOM_P->B_BGR */ = ACO_AWT; // 0.040642:ACO_AWT(1), 0.068017:AWT(1), 0.071255:CO_AWT(1), (...) 0.142845:JIS(0)
        a[230] /* CUSTOM_P->B_ABGR */ = ACO_AWT; // 0.042784:ACO_AWT(1), 0.06998:AWT(1), 0.08737:ACOP_AWT(1), (...) 0.148729:JIS(0)
        a[231] /* CUSTOM_P->B_ABGR_P */ = ACO_AWT; // 0.047386:ACO_AWT(0), 0.062305:AWT(0), 0.076915:ACOP_AWT(0), (...) 0.156256:JIS(0)
        a[232] /* CUSTOM_P->S_6_RGB */ = ACO_AWT; // 0.041139:ACO_AWT(9), 0.0546:JIS(0), 0.069691:AWT(9)
        a[233] /* CUSTOM_P->S_5_RGB */ = ACO_AWT; // 0.041145:ACO_AWT(9), 0.053886:JIS(0), 0.0714:CO_AWT(9), (...) 0.076202:AWT(9)
        a[234] /* CUSTOM_P->B_GRAY */ = ACO_AWT; // 0.042917:ACO_AWT(2), 0.058814:JIS(0), 0.065693:AWT(105)
        a[235] /* CUSTOM_P->S_GRAY */ = ACO_AWT; // 0.044692:ACO_AWT(2), 0.06185:JIS(0), 0.068077:BW_AWT(105), (...) 0.068577:AWT(2)
        a[236] /* CUSTOM_P->B_BIN */ = ACO_BW_ACO_AWT; // 0.045255:ACO_AWT(48), 0.052796:ACO_BW_ACO_AWT(0), 0.067563:ACO_BW_AWT(0), (...) 0.076883:AWT(48), (...) 0.219618:JIS(0)
        a[237] /* CUSTOM_P->B_IND */ = ACO_AWT; // 0.072995:ACO_AWT(81), 0.10295:CO_AWT(81), 0.115294:AWT(81), (...) 1.646717:CO_JIS(57), (...) 1.716357:JIS(0)
        a[238] /* CUSTOM_P->CUSTOM_P */ = JIS; // 0.001659:JIS(0), 0.072104:ACO_JIS(0), 0.082977:ACOP_JIS(0), (...) 0.092604:ACO_AWT(0), (...) 0.16236:AWT(0)
    }
}
